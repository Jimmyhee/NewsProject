package action;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import  biz.TeacherBiz;
import  entity.Teacher;
import  entity.TurnPage;
import util.Log;
@WebServlet("/TeacherQuerySvl")
public class TeacherQuerySvl extends HttpServlet {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
		 * The doGet method of the servlet. <br>
		 *
		 * This method is called when a form has its tag value method equals to get.
		 * 
		 * @param request the request send by the client to the server
		 * @param response the response send by the server to the client
		 * @throws ServletException if an error occurred
		 * @throws IOException if an error occurred
		 */
	public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String operate = request.getParameter("operate");
		 if(operate.equals("queryteacher")){
			this.doQueryTeacher(request, response);
		}
		
	}

	 /**
	 *get all teacher
	 * @param request
	 * @param response
	 * @throws ServletException
	 * @throws IOException
	 */
	public void doQueryTeacher(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String uno = request.getParameter("uno");
		String tname = request.getParameter("tname");
		String pg = request.getParameter("page");
		
		TeacherBiz tbiz = new TeacherBiz();
		TurnPage tp = new TurnPage();
		
		int page = 1;
		
		if (pg != null) {
			page = Integer.parseInt(pg);
			if (page < 1) {
				tp.page = 1;
			} else {
				tp.page = page;
			}
		}
		try {
			List<Teacher> teachers = tbiz.QuerybyCon(uno, tname, tp);
			
			if (teachers != null && teachers.size() > 0) {
				request.setAttribute("tp", tp);
				request.setAttribute("uno", uno);
				request.setAttribute("tname", tname);
				request.getSession().setAttribute("teachers", teachers);
				request.getRequestDispatcher("manager/Manager_teacherquery.jsp").forward(request, response);
			} else {
				request.setAttribute("msg", "No data !");
				request.getSession().setAttribute("teachers", null);
				request.getRequestDispatcher("manager/Manager_teacherquery.jsp").forward(request, response);
			}
		} catch (Exception e) {
			Log.logger.error(e.getMessage(),e);
			request.setAttribute("msg", "Network error Please call admin!");
			request.getRequestDispatcher("/error.jsp").forward(request, response);
		}
	}

}
